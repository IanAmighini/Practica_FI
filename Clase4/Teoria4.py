#Expresiones Regulares

import re

#Para pensar ğŸ¤”: Â¿QuÃ© usos crees que podemos darle a las expresiones regulares? ProponÃ© una aplicaciÃ³n concreta para tu carrera/disciplina.
#las expresiones regulares se pueden usar como filtros. Un uso podria ser para segmentar los archivos .txt de una carpeta

#Para pensar ğŸ¤”: Dado el siguiente texto:
texto = 'Esta es la linea uno\npalabra en la linea dos\n'
#Â¿CÃ³mo crees que darÃ¡n las siguientes bÃºsquedas?
#expresion regular a: '^palabra': va a encontrar un resultado
#expresion regular b: '\Apalabra': no va a encontrar nada
#expresion regular c: 'palabra$': no va a encontrar nada
#expresion regular d: 'palabra\Z': no va a encontrar nada

#Para pensar ğŸ¤”: Â¿QuÃ© significarÃ¡ la expresiÃ³n regular "X(.*)Y"? Ennumera algunas de las posibles strings que cumplen con dicha condiciÃ³n.
#la expresion regular significa que busca cero o mas ocurrencias de todo el texto (No se mas)

#DesafÃ­o I: Â¿ConstruÃ­ la expresiÃ³n regular que obtenga al menos 4 dÃ­gitos?
def cuatro_digitos(string):
    return re.search('[0-9]{4,}', string)
print(cuatro_digitos('nada12345hola'))

#DesafÃ­o II: Â¿ConstruÃ­ la expresiÃ³n regular que obtenga al entre 3 y 6 letras minÃºsculas?
def minusculas(string):
    return re.search('[a-z]{3,6}', string)
print(minusculas('asdasdddddddGGGG'))

#DesafÃ­o III: Â¿ConstruÃ­ la expresiÃ³n regular que obtenga todas las apariciones del patrÃ³n ab en un string?
def todas(string):
    return re.search('ab*', string)
print(todas('abcdababdfsg'))

#Para pensar ğŸ¤”: Â¿Existe una Ãºnica respuesta para los ejercicios? Â¿QuÃ© otras alternativas se te ocurren?
#para el desafio I se puede usar \d en vez de [0-9], despues del resto no se otras alternativas

#Desafio IV: Â¿QuÃ© expresiÃ³n regular usarÃ­as para extraer el nÃºmero de estudiantes que hay en una clase segÃºn el siguiente texto:
texto2 = 'En la clase de IntroducciÃ³n a la programaciÃ³n hay 30 estudiantes' 
#'\d+'

#Para pensar ğŸ¤”: Â¿QuÃ© resultado obtenemos al ejecutar en la Ãºltima linea?
#nos dice que se encontro el patron desde la posicion 22 hasta la 26

#Desafio V: imprimÃ­ el fragmento del texto entre la posiciÃ³n 22 y 26 Â¿QuÃ© resultado obtenÃ©s? Â¿QuÃ© quiere decir el mensaje span?
#obtengo la palabra 'amet'. span es las posiciones donde se encuentra el string

#Para pensar ğŸ¤”: Â¿QuÃ© resultado obtenemos con search()?Â¿QuÃ© diferencias observan con match()?
#match() encuentra solo al principio del string y search() busca en todo el string

#Para pensar ğŸ¤”: Â¿QuÃ© resultado obtenemos? Â¿Para quÃ© sirve la funciÃ³n group()?
#obtenemos lo que encontro del string. group() nos da los caracteres del patron encontrado.

#Para pensar ğŸ¤”: Â¿QuÃ© resultado obtenemos?
#nos devuelve en una lista todas las busquedas encontradas

#Desafio VI: ExpresÃ¡ el patron de bÃºsqueda utilizando lo visto anteriormente sobre metacaracteres y rangos.
#no se que pregunta la verdad

#Para pensar ğŸ¤”: Â¿QuÃ© resultado obtenemos? Â¿Para quÃ© sirve la funciÃ³n sub?
#obtenemos el texto pero con el patron cambiado por ###. sub() reemplaza el patron buscado por algo que le decimos nosotros